{"version":3,"sources":["myform.js","index.js"],"names":["Basic","initialValues","email","password","validate","values","errors","test","onSubmit","setSubmitting","setTimeout","alert","JSON","stringify","touched","handleChange","handleBlur","handleSubmit","isSubmitting","type","name","onChange","onBlur","value","disabled","Square","props","className","onClick","calculateWinner","squares","lines","i","length","a","b","c","Board","state","Array","fill","x","updateSquares","this","slice","setState","handleClick","status","winner","xIsNext","renderSquare","React","Component","ReactDOM","render","document","getElementById"],"mappings":"kQA8DgBA,EA3DD,kBACZ,6BACE,qDACA,kBAAC,IAAD,CACEC,cAAe,CAAEC,MAAO,GAAIC,SAAU,IACtCC,SAAU,SAAAC,GACR,IAAMC,EAAS,GAQf,OAPKD,EAAOH,MAGT,2CAA2CK,KAAKF,EAAOH,SAExDI,EAAOJ,MAAQ,yBAJfI,EAAOJ,MAAQ,WAMVI,GAETE,SAAU,SAACH,EAAD,GAAgC,IAArBI,EAAoB,EAApBA,cACnBC,YAAW,WACTC,MAAMC,KAAKC,UAAUR,EAAQ,KAAM,IACnCI,GAAc,KACb,QAGJ,gBACCJ,EADD,EACCA,OACAC,EAFD,EAECA,OACAQ,EAHD,EAGCA,QACAC,EAJD,EAICA,aACAC,EALD,EAKCA,WACAC,EAND,EAMCA,aACAC,EAPD,EAOCA,aAPD,OAUC,0BAAMV,SAAUS,GACd,2BACEE,KAAK,QACLC,KAAK,QACLC,SAAUN,EACVO,OAAQN,EACRO,MAAOlB,EAAOH,QAEfI,EAAOJ,OAASY,EAAQZ,OAASI,EAAOJ,MACzC,2BACEiB,KAAK,WACLC,KAAK,WACLC,SAAUN,EACVO,OAAQN,EACRO,MAAOlB,EAAOF,WAEfG,EAAOH,UAAYW,EAAQX,UAAYG,EAAOH,SAC/C,4BAAQgB,KAAK,SAASK,SAAUN,GAAhC,gBChDX,SAASO,EAAOC,GACZ,OACE,4BAAQC,UAAU,SAASC,QAASF,EAAME,SACvCF,EAAMH,OAIf,SAASM,EAAgBC,GAWvB,IAVA,IAAMC,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CAAC,IAAD,cACnBD,EAAMC,GADa,GAC9BE,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAIN,EAAQI,IAAMJ,EAAQI,KAAOJ,EAAQK,IAAML,EAAQI,KAAOJ,EAAQM,GACpE,OAAON,EAAQI,GAGnB,OAAO,K,IAsCHG,E,kDAEF,WAAYX,GAAQ,IAAD,8BACf,cAAMA,IACDY,MAAQ,CACTR,QAASS,MAAM,GAAGC,KAAK,IACvBC,GAAG,GAJQ,E,wDAOPT,GACR,IAAMU,EAAgBC,KAAKL,MAAMR,QAAQc,QACrCf,EAAgBa,IAAkBA,EAAcV,KAGpDU,EAAcV,GAAKW,KAAKL,MAAMG,EAAE,IAAI,IACpCE,KAAKE,SAAS,CACVf,QAASY,EACTD,GAAIE,KAAKL,MAAMG,O,mCAIVT,GAAI,IAAD,OACZ,OAAO,kBAACP,EAAD,CAAQF,MAAOoB,KAAKL,MAAMR,QAAQE,GACrCJ,QAAU,WAAM,EAAKkB,YAAYd,Q,+BAKrC,IACAe,EADMC,EAASnB,EAAgBc,KAAKL,MAAMR,SAQ1C,OALFiB,EADEC,EACO,WAAaA,EAEb,iBAAmBL,KAAKL,MAAMW,QAAU,IAAM,KAIrD,6BACI,yBAAKtB,UAAU,UAAUoB,GACzB,yBAAKpB,UAAU,aACdgB,KAAKO,aAAa,GAClBP,KAAKO,aAAa,GAClBP,KAAKO,aAAa,IAEnB,yBAAKvB,UAAU,aACdgB,KAAKO,aAAa,GAClBP,KAAKO,aAAa,GAClBP,KAAKO,aAAa,IAEnB,yBAAKvB,UAAU,aACdgB,KAAKO,aAAa,GAClBP,KAAKO,aAAa,GAClBP,KAAKO,aAAa,S,GApDXC,IAAMC,WA2DPD,IAAMC,UAkBzBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.d97b5f56.chunk.js","sourcesContent":[" import React from 'react';\n import { Formik } from 'formik';\n \n const Basic = () => (\n   <div>\n     <h1>Anywhere in your app!</h1>\n     <Formik\n       initialValues={{ email: '', password: '' }}\n       validate={values => {\n         const errors = {};\n         if (!values.email) {\n           errors.email = 'Required';\n         } else if (\n           !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n         ) {\n           errors.email = 'Invalid email address';\n         }\n         return errors;\n       }}\n       onSubmit={(values, { setSubmitting }) => {\n         setTimeout(() => {\n           alert(JSON.stringify(values, null, 2));\n           setSubmitting(false);\n         }, 400);\n       }}\n     >\n       {({\n         values,\n         errors,\n         touched,\n         handleChange,\n         handleBlur,\n         handleSubmit,\n         isSubmitting,\n         /* and other goodies */\n       }) => (\n         <form onSubmit={handleSubmit}>\n           <input\n             type=\"email\"\n             name=\"email\"\n             onChange={handleChange}\n             onBlur={handleBlur}\n             value={values.email}\n           />\n           {errors.email && touched.email && errors.email}\n           <input\n             type=\"password\"\n             name=\"password\"\n             onChange={handleChange}\n             onBlur={handleBlur}\n             value={values.password}\n           />\n           {errors.password && touched.password && errors.password}\n           <button type=\"submit\" disabled={isSubmitting}>\n             Submit\n           </button>\n         </form>\n       )}\n     </Formik>\n   </div>\n );\n \n export default Basic;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Basic from './myform';\n\nfunction Square(props) {\n    return (\n      <button className=\"square\" onClick={props.onClick}>\n        {props.value}\n      </button>\n    );\n}\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n/*\nclass Square extends React.Component {\n\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: null,\n            score: 0,\n        };\n    }\n\n    render() {\n        return (\n            <button \n                className=\"square\"\n                onClick={ () => { this.props.onClick(); } }\n                onClick={ \n                    () => { \n                        //alert(\"กด\"+this.props.value); \n                        this.setState(\n                            {\n                                value: 'X',\n                                score: 1,\n                            }\n                        );\n                    }\n            }\n            >\n            {this.state.value}\n            </button>\n        );\n    }\n}\n*/\n\nclass Board extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            squares: Array(9).fill(\"\"),\n            x: true,\n        };   \n    }\n    handleClick(i) {\n        const updateSquares = this.state.squares.slice();\n        if (calculateWinner(updateSquares) || updateSquares[i]) {\n            return;\n          }\n        updateSquares[i] = this.state.x?'X':'O';\n        this.setState({\n            squares: updateSquares,\n            x: !this.state.x,\n        });\n    }\n\n    renderSquare(i) {\n        return <Square value={this.state.squares[i]} \n            onClick={ ()=>{ this.handleClick(i); } } />;\n    }\n\n    render() {\n    //    const status = 'ผู้เล่นคนถัดไป: '+(this.state.x?'X':'O');\n        const winner = calculateWinner(this.state.squares);\n    let status;\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n        return (\n        <div>\n            <div className=\"status\">{status}</div>\n            <div className=\"board-row\">\n            {this.renderSquare(0)}\n            {this.renderSquare(1)}\n            {this.renderSquare(2)}\n            </div>\n            <div className=\"board-row\">\n            {this.renderSquare(3)}\n            {this.renderSquare(4)}\n            {this.renderSquare(5)}\n            </div>\n            <div className=\"board-row\">\n            {this.renderSquare(6)}\n            {this.renderSquare(7)}\n            {this.renderSquare(8)}\n            </div>\n        </div>\n        );\n    }\n}\n\nclass Game extends React.Component {\n  render() {\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board />\n        </div>\n        <div className=\"game-info\">\n          <div>{/* status */}</div>\n          <ol>{/* TODO */}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <Basic />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}